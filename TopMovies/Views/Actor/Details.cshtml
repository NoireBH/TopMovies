@model ActorDetailsViewModel
@inject IActorService actorService

@{

	var actor = await actorService.GetActorByIdAsync(Model.Id);
	var moviesOfActor = await actorService.GetAllOfTheActorsMoviesByIdAsync(Model.Id);
}


<div class="container-fluid p-0">
	@*
	Main Details
	*@
	<section class="container-fluid details-main-content">
		<header class="row pe-2 mb-2">
			<div class="col-12 text-center">
				<h1>@Model.Name</h1>
			</div>			
		</header>
		<main class="container-fluid no-padding">
			<div class="row bg-dark g-0 actor-main-content">
				<div class="col-6">
					<img src="@Model.ImageUrl" class="img-fluid" style="max-width:100%" />
				</div>
				<div class=" col-6">
					<p>@Model.Description</p>
				</div>
			</div>
		</main>
	</section>
	<section class="mb-3">
		<h1 class="text-center mb-5">Movies where @Model.Name has been in:</h1>

		<div class="d-flex flex-row flex-wrap justify-content-around  text-center">

			@if (moviesOfActor.Length > 0)
			{
				@foreach (var moa in moviesOfActor)
				{
					<div class="actor-movies-img-container">
						<a asp-controller="Movie" asp-action="Details" asp-route-id="@moa.MovieId">
							<img src="@moa.MovieImageUrl" class="img-fluid">
						</a>
						<div class="d-flex flex-column actor-movies-names text-center">
							<h4>
								<a class="text-dark" asp-controller="Movie" asp-action="Details" asp-route-id="@moa.MovieId">
									@moa.MovieName
								</a>
							</h4>
						</div>
					</div>
				}
			}
			else
			{
				<h2 class="text-center">There is currently no information about the actors of this movie!</h2>
			}


		</div>


	</section>
</div>